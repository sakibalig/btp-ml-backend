name: Run pytest

on:
  push:
    branches: [ main ]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Test with pytest
      id: pytest
      run: |
        # Run pytest and save output to a file
        pytest -v | tee pytest_results.txt || echo "Tests failed but continuing workflow"
        
        # Create a simpler summary without special characters
        if grep -q "collected" pytest_results.txt; then
          PASSED=$(grep -c "PASSED" pytest_results.txt || echo 0)
          FAILED=$(grep -c "FAILED" pytest_results.txt || echo 0)
          SKIPPED=$(grep -c "SKIPPED" pytest_results.txt || echo 0)
          
          # Store results as separate environment variables to avoid format issues
          echo "TESTS_PASSED=$PASSED" >> $GITHUB_ENV
          echo "TESTS_FAILED=$FAILED" >> $GITHUB_ENV
          echo "TESTS_SKIPPED=$SKIPPED" >> $GITHUB_ENV
        else
          echo "TESTS_PASSED=0" >> $GITHUB_ENV
          echo "TESTS_FAILED=0" >> $GITHUB_ENV
          echo "TESTS_SKIPPED=0" >> $GITHUB_ENV
        fi
    - name: Send Discord notification
      if: always()
      uses: sarisia/actions-status-discord@v1
      with:
        webhook: https://discord.com/api/webhooks/1303432290759868417/ums51fXJTl632G8RPffpW12eNXg4qB84UwAcJPVMqbcgLNudJqYJEryPkWr0TWdo3QHy
        title: "Pytest Results"
        description: "${{ github.repository }} (${{ github.ref_name }})\n\nPassed: ${{ env.TESTS_PASSED }} | Failed: ${{ env.TESTS_FAILED }} | Skipped: ${{ env.TESTS_SKIPPED }}"
        username: GitHub Actions